% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/04_DataQuality_utils.R
\name{dq_future_ees}
\alias{dq_future_ees}
\title{Find Future EEs}
\usage{
dq_future_ees(
  served_in_date_range,
  rm_dates,
  vars,
  app_env = get_app_env(e = rlang::caller_env())
)
}
\arguments{
\item{served_in_date_range}{\code{(data.frame)} See \code{served_in_date_range}}

\item{rm_dates}{\code{(named list)} with all dates specified or calculated in \code{dates}}

\item{vars}{\code{(named list)}
\itemize{
\item{\code{prep}}{ Column names for Prep}
\item{\code{we_want}}{ Column names for output}
}}

\item{app_env}{\code{(app_env)} Object containing dependencies. If all arguments to this function are saved in the \code{app_env}, then they will be called from there and arguments do not need to be specified.}
}
\value{
\code{(data.frame)} \code{vars$we_want} and \code{Issue} (Issue Name), \code{Type} (Error or Warning), and \code{Guidance} (How to correct the issue)
}
\description{
Users should not be entering a client into a project on a date in the future. If the Entry Date is correct, there is no action needed, but going forward, please be sure that your data entry workflow is correct according to your project type.
}
\seealso{
Other DQ: EE Checks: 
\code{\link{dq_conflicting_income}()},
\code{\link{dq_duplicate_ees}()},
\code{\link{dq_future_exits}()},
\code{\link{dq_missing_income}()}
}
\concept{DQ: EE Checks}
