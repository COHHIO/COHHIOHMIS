% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00_functions.R
\name{app_env}
\alias{app_env}
\title{Easily extract dependencies and pass them between functions}
\description{
Save dependencies for future functions in an environment and put app dependencies into lists
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{\code{(list)}}}{with all app dependencies}

\item{\code{Save}}{a vector of the names of working dependencies that have been saved for future reference when \code{$add_deps_to_env} is called.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{\code{(list)}}}{with all app dependencies}

\item{\code{Save}}{a vector of the names of working dependencies that have been saved for future reference when \code{$add_deps_to_env} is called.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-gather_deps}{\code{app_env$gather_deps()}}
\item \href{#method-add_deps_to_env}{\code{app_env$add_deps_to_env()}}
\item \href{#method-clone}{\code{app_env$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gather_deps"></a>}}
\if{latex}{\out{\hypertarget{method-gather_deps}{}}}
\subsection{Method \code{gather_deps()}}{
Gather the objects passed to \code{app_env}s internal environment to be passed to subsequent functions. Save app dependencies into a list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{app_env$gather_deps(..., app_deps = self$app_deps, env = rlang::caller_env())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{\code{(objects)} Dependencies for subsequent functions}

\item{\code{app_deps}}{\code{(named list)} with items for each app that contain character vectors of the objects each app depends on to be saved.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_deps_to_env"></a>}}
\if{latex}{\out{\hypertarget{method-add_deps_to_env}{}}}
\subsection{Method \code{add_deps_to_env()}}{
Pass all dependencies saved from previous functions to an environment for use
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{app_env$add_deps_to_env(env = rlang::caller_env())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{env}}{\code{(environment)} To pass working dependencies to. \strong{Default} the calling environment}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{app_env$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
